---
- name: Mise à jour des paquets de sécurité (Debian/Ubuntu)
  apt:
    upgrade: dist                  # Effectue une mise à jour des paquets installés
    only_upgrade: yes               # Assure de ne mettre à jour que les paquets déjà installés
    autoclean: yes                  # Nettoie les paquets inutilisés
    autoremove: yes                 # Supprime les paquets obsolètes
  when: ansible_os_family == "Debian"

- name: Mise à jour des paquets de sécurité (CentOS/RHEL)
  yum:
    name: "*"                       # Met à jour tous les paquets
    state: latest                   # Met à jour vers la dernière version disponible
    security: yes                   # Applique uniquement les mises à jour de sécurité
  when: ansible_os_family == "RedHat"

- name: Vérifier si un reboot est nécessaire (Debian/Ubuntu)
  stat:
    path: /var/run/reboot-required   # Vérifie le fichier `reboot-required`
  register: reboot_required
  when: ansible_os_family == "Debian"

- name: Vérifier si un reboot est nécessaire (CentOS/RHEL)
  stat:
    path: /var/run/reboot-required   # Vérifie le fichier `reboot-required`
  register: reboot_required
  when: ansible_os_family == "RedHat"

- name: Déboguer la variable reboot_required
  debug:
    msg: "Contenu de reboot_required: {{ reboot_required }}"

- name: Redémarrer les services si nécessaire (Debian/Ubuntu)
  service:
    name: "{{ item }}"               # Redémarre le service spécifié
    state: restarted                 # Assure que le service est redémarré
  with_items:
    - sshd                           # Spécifie le service SSH à redémarrer
  when: reboot_required is defined and reboot_required.stat is defined and reboot_required.stat.exists  # Vérifie que reboot_required et reboot_required.stat existent avant d'y accéder

- name: Redémarrer les services si nécessaire (CentOS/RHEL)
  service:
    name: "{{ item }}"               # Redémarre le service spécifié
    state: restarted                 # Assure que le service est redémarré
  with_items:
    - sshd                           # Spécifie le service SSH à redémarrer
  when: reboot_required is defined and reboot_required.stat is defined and reboot_required.stat.exists  # Vérifie que reboot_required et reboot_required.stat existent avant d'y accéder

- name: Ne pas redémarrer le système si non nécessaire
  reboot:
    reboot_timeout: 600              # Temps d'attente avant d'estimer que le redémarrage est terminé
    test_command: uptime            # Teste si le système a redémarré
  when: reboot_required is defined and reboot_required.stat is defined and reboot_required.stat.exists  # Vérifie que reboot_required et reboot_required.stat existent avant d'y accéder
  ignore_errors: yes                # Ignore les erreurs si le redémarrage échoue
